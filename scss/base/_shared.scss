/*------------------------------------*\
    $SHARED
\*------------------------------------*/

@if $global-border-box == true {
    // All elements will adopt `box-sizing:border-box;` 
    // as per paulirish.com/2012/box-sizing-border-box-ftw
    *{
        &,
        &:before,
        &:after{
            @include box-sizing(border-box);
        }
    }
}


// Fluid images
img {
  max-width:100%;
}

// Non-fluid images if you specify `width` and/or `height` attributes
img[width],
img[height] {
  max-width:none;
}


// Where `margin-bottom` is concerned, this value will be the same as the
// base line-height. This allows us to keep a consistent vertical rhythm.
// As per: csswizardry.com/2012/06/single-direction-margin-declarations

// Base elements
h1,h2,h3,h4,h5,h6,hgroup,
ul,ol,dl,
blockquote,p,address,
table,
fieldset,figure,figcaption,
pre,
// Objects and abstractions
%sass-margin-bottom,
.media,
.island,
.islet {
  margin-top: 0;
  margin-bottom:$base-spacing-unit;
  margin-bottom:($base-spacing-unit / $base-font-size)*1rem;
  .islet & {
      margin-bottom:$base-spacing-unit / 2;
      margin-bottom:(($base-spacing-unit / $base-font-size) / 2)*1rem;
  }
  ul,ol {
    margin-bottom: 0;
  }
}


// Doubled up `margin-bottom` helper class
.landmark {
  margin-bottom:2 * $base-spacing-unit;
  margin-bottom:(2 * $base-spacing-unit / $base-font-size)*1rem;
}


// `hr` elements only take up a few pixels, so give them special treatment
hr {
  margin-bottom:$base-spacing-unit - 2px;
  margin-bottom:(($base-spacing-unit - 2px) / $base-font-size)*1rem;
}


// Where `margin-left` is concerned, we want to try and indent certain elements
// by a consistent amount
ul,ol,dd {
  margin-left:$base-spacing-unit;
  margin-left:($base-spacing-unit / $base-font-size)*1rem;
  padding: 0;
}
